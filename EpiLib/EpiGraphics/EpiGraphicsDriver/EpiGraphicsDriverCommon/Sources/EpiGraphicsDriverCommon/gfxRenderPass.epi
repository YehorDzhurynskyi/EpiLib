enum gfxAttachmentBindPoint
{
    Input,
    Color,
    DepthStencil,
    Resolve
};

class gfxAttachmentSchema
{
    gfxFormat Format = gfxFormat::UNDEFINED;
    gfxSampleCount SampleCount = gfxSampleCount::Sample1;
};

class gfxAttachmentRefSchema
{
    gfxAttachmentSchema Attachment;
    epiU32 AttachmentIndex;
};

class gfxRenderSubPassSchema
{
    [ReadOnly]
    {
        epiArray<gfxAttachmentRefSchema> AttachmentsInput;
        epiArray<gfxAttachmentRefSchema> AttachmentsColor;
        epiArray<gfxAttachmentRefSchema> AttachmentsDepthStencil;
        epiArray<gfxAttachmentRefSchema> AttachmentsResolve;
    }
};

class gfxRenderPassSchema
{
    [ReadOnly]
    {
        epiArray<gfxRenderSubPassSchema> SubPasses;
    }

    [Virtual, ReadOnly, ReadCallback(SuppressRef=true)]
    {
        epiArray<gfxAttachmentSchema> Attachments;
    }
};

class gfxAttachment
{
    gfxFormat Format = gfxFormat::UNDEFINED;
    gfxSampleCount SampleCount = gfxSampleCount::Sample1;
    gfxAttachmentLoadOp LoadOp = gfxAttachmentLoadOp::DontCare;
    gfxAttachmentStoreOp StoreOp = gfxAttachmentStoreOp::DontCare;
    gfxAttachmentLoadOp StencilLoadOp = gfxAttachmentLoadOp::DontCare;
    gfxAttachmentStoreOp StencilStoreOp = gfxAttachmentStoreOp::DontCare;
    gfxImageLayout InitialLayout = gfxImageLayout::Undefined;
    gfxImageLayout FinalLayout = gfxImageLayout::Undefined;
};

class gfxAttachmentRef
{
    gfxAttachment Attachment;
    epiU32 AttachmentIndex;
    gfxImageLayout Layuot;
};

class gfxRenderSubPassDependency
{
    epiU32 SrcSubPass;
    epiU32 DstSubPass;
    epiBool IsSrcSubPassExternal;
    epiBool IsDstSubPassExternal;

    gfxPipelineStage SrcStageMask;
    gfxPipelineStage DstStageMask;
    gfxAccess SrcAccessMask;
    gfxAccess DstAccessMask;
    gfxDependency DependencyFlags;
};

class gfxRenderSubPass
{
    gfxPipelineBindPoint BindPoint;

    [ReadOnly]
    {
        epiArray<gfxAttachmentRef> AttachmentsInput;
        epiArray<gfxAttachmentRef> AttachmentsColor;
        epiArray<gfxAttachmentRef> AttachmentsDepthStencil;
        epiArray<gfxAttachmentRef> AttachmentsResolve;
    }
};

class gfxRenderPassCreateInfo
{
    [ReadOnly]
    {
        epiArray<gfxRenderSubPass> SubPasses;
        epiArray<gfxRenderSubPassDependency> SubPassDependencies;
    }

    [Virtual, ReadOnly, ReadCallback(SuppressRef=true)]
    {
        epiArray<gfxAttachment> Attachments;
    }
};

class gfxRenderPass
{
    [ReadOnly]
    {
        epiArray<gfxRenderSubPass> SubPasses;
        epiArray<gfxRenderSubPassDependency> SubPassDependencies;
        epiArray<gfxAttachment> Attachments;
    }
};
