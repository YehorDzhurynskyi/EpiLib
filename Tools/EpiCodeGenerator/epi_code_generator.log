[ INFO] Parsing: C:\Users\kadzh_000\Projects\BloodSystem\Extern\EpiLib\Tools\EpiCodeGenerator/test/samples/v1\A.epi
[DEBUG] (line:   1, column:   1): "interface" (TokenType.InterfaceType)
[DEBUG] (line:   1, column:  11): "IThis" (TokenType.Identifier)
[DEBUG] (line:   2, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:   3, column:   6): "Object" (TokenType.Identifier)
[DEBUG] (line:   3, column:  12): "*" (TokenType.Asterisk)
[DEBUG] (line:   3, column:  14): "GetThis" (TokenType.Identifier)
[DEBUG] (line:   3, column:  21): "(" (TokenType.OpenBracket)
[DEBUG] (line:   3, column:  22): ")" (TokenType.CloseBracket)
[DEBUG] (line:   3, column:  23): ";" (TokenType.Semicolon)
[DEBUG] (line:   4, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:   4, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:   6, column:   2): "interface" (TokenType.InterfaceType)
[DEBUG] (line:   6, column:  12): "IHashable" (TokenType.Identifier)
[DEBUG] (line:   7, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:   8, column:   6): "epiHash_t" (TokenType.HashTType)
[DEBUG] (line:   8, column:  16): "GetHash" (TokenType.Identifier)
[DEBUG] (line:   8, column:  23): "(" (TokenType.OpenBracket)
[DEBUG] (line:   8, column:  24): ")" (TokenType.CloseBracket)
[DEBUG] (line:   8, column:  25): ";" (TokenType.Semicolon)
[DEBUG] (line:   9, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:   9, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:  11, column:   2): "class" (TokenType.ClassType)
[DEBUG] (line:  11, column:   8): "DataClass" (TokenType.Identifier)
[DEBUG] (line:  12, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:  13, column:   6): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  13, column:   7): "ReadCallback" (TokenType.ReadCallbackAttr)
[DEBUG] (line:  13, column:  19): "," (TokenType.Comma)
[DEBUG] (line:  13, column:  21): "ForceMinMax" (TokenType.ForceMinMaxAttr)
[DEBUG] (line:  13, column:  32): "(" (TokenType.OpenBracket)
[DEBUG] (line:  13, column:  33): "-5.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  13, column:  37): "," (TokenType.Comma)
[DEBUG] (line:  13, column:  39): "5.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  13, column:  42): ")" (TokenType.CloseBracket)
[DEBUG] (line:  13, column:  43): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  14, column:   6): "{" (TokenType.OpenBrace)
[DEBUG] (line:  15, column:  10): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  15, column:  19): "x" (TokenType.Identifier)
[DEBUG] (line:  15, column:  20): ";" (TokenType.Semicolon)
[DEBUG] (line:  16, column:  10): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  16, column:  19): "y" (TokenType.Identifier)
[DEBUG] (line:  16, column:  20): ";" (TokenType.Semicolon)
[DEBUG] (line:  17, column:  10): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  17, column:  19): "z" (TokenType.Identifier)
[DEBUG] (line:  17, column:  20): ";" (TokenType.Semicolon)
[DEBUG] (line:  18, column:  10): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  18, column:  19): "w" (TokenType.Identifier)
[DEBUG] (line:  18, column:  20): ";" (TokenType.Semicolon)
[DEBUG] (line:  19, column:   6): "}" (TokenType.CloseBrace)
[DEBUG] (line:  20, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:  20, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:  22, column:   2): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  22, column:   3): "SerializationCallback" (TokenType.SerializationCallbackAttr)
[DEBUG] (line:  22, column:  24): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  23, column:   2): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  23, column:   3): "AdditionalInterface" (TokenType.AdditionalInterfaceAttr)
[DEBUG] (line:  23, column:  22): "(" (TokenType.OpenBracket)
[DEBUG] (line:  23, column:  23): "IHashable" (TokenType.Identifier)
[DEBUG] (line:  23, column:  32): "," (TokenType.Comma)
[DEBUG] (line:  23, column:  34): "IThis" (TokenType.Identifier)
[DEBUG] (line:  23, column:  39): ")" (TokenType.CloseBracket)
[DEBUG] (line:  23, column:  40): "," (TokenType.Comma)
[DEBUG] (line:  23, column:  42): "DllEntry" (TokenType.DllEntryAttr)
[DEBUG] (line:  23, column:  50): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  24, column:   2): "class" (TokenType.ClassType)
[DEBUG] (line:  24, column:   8): "AClass" (TokenType.Identifier)
[DEBUG] (line:  25, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:  26, column:   6): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  26, column:   7): "NoDuplicate" (TokenType.NoDuplicateAttr)
[DEBUG] (line:  26, column:  18): "," (TokenType.Comma)
[DEBUG] (line:  26, column:  20): "Transient" (TokenType.TransientAttr)
[DEBUG] (line:  26, column:  29): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  27, column:   6): "{" (TokenType.OpenBrace)
[DEBUG] (line:  28, column:  10): "epiS32" (TokenType.IntType)
[DEBUG] (line:  28, column:  17): "Prty_1" (TokenType.Identifier)
[DEBUG] (line:  28, column:  23): ";" (TokenType.Semicolon)
[DEBUG] (line:  29, column:  10): "epiBool" (TokenType.BoolType)
[DEBUG] (line:  29, column:  18): "Prty_2" (TokenType.Identifier)
[DEBUG] (line:  29, column:  25): "=" (TokenType.Assing)
[DEBUG] (line:  29, column:  27): "true" (TokenType.TrueLiteral)
[DEBUG] (line:  29, column:  31): ";" (TokenType.Semicolon)
[DEBUG] (line:  30, column:  10): "DataClass" (TokenType.Identifier)
[DEBUG] (line:  30, column:  20): "Prty_3" (TokenType.Identifier)
[DEBUG] (line:  30, column:  26): ";" (TokenType.Semicolon)
[DEBUG] (line:  31, column:  10): "DataClass" (TokenType.Identifier)
[DEBUG] (line:  31, column:  19): "*" (TokenType.Asterisk)
[DEBUG] (line:  31, column:  20): "*" (TokenType.Asterisk)
[DEBUG] (line:  31, column:  21): "*" (TokenType.Asterisk)
[DEBUG] (line:  31, column:  22): "*" (TokenType.Asterisk)
[DEBUG] (line:  31, column:  24): "Prty_4" (TokenType.Identifier)
[DEBUG] (line:  31, column:  30): ";" (TokenType.Semicolon)
[DEBUG] (line:  32, column:  10): "epiString" (TokenType.StringType)
[DEBUG] (line:  32, column:  20): "Prty_5" (TokenType.Identifier)
[DEBUG] (line:  32, column:  27): "=" (TokenType.Assing)
[DEBUG] (line:  32, column:  29): ""some text"" (TokenType.StringLiteral)
[DEBUG] (line:  32, column:  40): ";" (TokenType.Semicolon)
[DEBUG] (line:  33, column:  10): "epiChar" (TokenType.CharType)
[DEBUG] (line:  33, column:  18): "Prty_6" (TokenType.Identifier)
[DEBUG] (line:  33, column:  25): "=" (TokenType.Assing)
[DEBUG] (line:  33, column:  27): "'@'" (TokenType.CharLiteral)
[DEBUG] (line:  33, column:  30): ";" (TokenType.Semicolon)
[DEBUG] (line:  34, column:  10): "epiChar" (TokenType.CharType)
[DEBUG] (line:  34, column:  18): "Prty_7" (TokenType.Identifier)
[DEBUG] (line:  34, column:  25): "=" (TokenType.Assing)
[DEBUG] (line:  34, column:  27): "'\''" (TokenType.CharLiteral)
[DEBUG] (line:  34, column:  31): ";" (TokenType.Semicolon)
[DEBUG] (line:  35, column:   6): "}" (TokenType.CloseBrace)
[DEBUG] (line:  37, column:   6): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  37, column:   7): "Virtual" (TokenType.VirtualAttr)
[DEBUG] (line:  37, column:  14): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  38, column:   6): "{" (TokenType.OpenBrace)
[DEBUG] (line:  39, column:  10): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  39, column:  11): "WriteOnly" (TokenType.WriteOnlyAttr)
[DEBUG] (line:  39, column:  20): "," (TokenType.Comma)
[DEBUG] (line:  39, column:  22): "ForceMin" (TokenType.ForceMinAttr)
[DEBUG] (line:  39, column:  30): "(" (TokenType.OpenBracket)
[DEBUG] (line:  39, column:  31): "0.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  39, column:  34): ")" (TokenType.CloseBracket)
[DEBUG] (line:  39, column:  35): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  40, column:  10): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  40, column:  19): "Virtual_1" (TokenType.Identifier)
[DEBUG] (line:  40, column:  28): ";" (TokenType.Semicolon)
[DEBUG] (line:  42, column:  10): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  42, column:  11): "AssertMinMax" (TokenType.AssertMinMaxAttr)
[DEBUG] (line:  42, column:  23): "(" (TokenType.OpenBracket)
[DEBUG] (line:  42, column:  24): "0.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  42, column:  27): "," (TokenType.Comma)
[DEBUG] (line:  42, column:  29): "100.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  42, column:  34): ")" (TokenType.CloseBracket)
[DEBUG] (line:  42, column:  35): "," (TokenType.Comma)
[DEBUG] (line:  42, column:  37): "ReadOnly" (TokenType.ReadOnlyAttr)
[DEBUG] (line:  42, column:  45): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  43, column:  10): "epiS32" (TokenType.IntType)
[DEBUG] (line:  43, column:  17): "Virtual_2" (TokenType.Identifier)
[DEBUG] (line:  43, column:  26): ";" (TokenType.Semicolon)
[DEBUG] (line:  44, column:   6): "}" (TokenType.CloseBrace)
[DEBUG] (line:  45, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:  45, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:  47, column:   2): "class" (TokenType.ClassType)
[DEBUG] (line:  47, column:   8): "BClass" (TokenType.Identifier)
[DEBUG] (line:  47, column:  15): ":" (TokenType.Colon)
[DEBUG] (line:  47, column:  17): "AClass" (TokenType.Identifier)
[DEBUG] (line:  48, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:  49, column:   6): "enum" (TokenType.EnumType)
[DEBUG] (line:  49, column:  11): "BEnum" (TokenType.Identifier)
[DEBUG] (line:  50, column:   6): "{" (TokenType.OpenBrace)
[DEBUG] (line:  51, column:  10): "B_AAA" (TokenType.Identifier)
[DEBUG] (line:  52, column:  10): "B_BBB" (TokenType.Identifier)
[DEBUG] (line:  53, column:  10): "B_CCC" (TokenType.Identifier)
[DEBUG] (line:  54, column:  10): "B_DDD" (TokenType.Identifier)
[DEBUG] (line:  55, column:   6): "}" (TokenType.CloseBrace)
[DEBUG] (line:  55, column:   7): ";" (TokenType.Semicolon)
[DEBUG] (line:  57, column:   6): "epiFloat" (TokenType.FloatingType)
[DEBUG] (line:  57, column:  15): "Prty_B" (TokenType.Identifier)
[DEBUG] (line:  57, column:  22): "=" (TokenType.Assing)
[DEBUG] (line:  57, column:  24): "-2424.0" (TokenType.FloatingLiteral)
[DEBUG] (line:  57, column:  31): ";" (TokenType.Semicolon)
[DEBUG] (line:  58, column:   6): "BEnum" (TokenType.Identifier)
[DEBUG] (line:  58, column:  12): "SomeBEnum" (TokenType.Identifier)
[DEBUG] (line:  58, column:  21): ";" (TokenType.Semicolon)
[DEBUG] (line:  59, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:  59, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:  60, column:   2): "EOF" (TokenType.EOF)
[ INFO] Parsing: C:\Users\kadzh_000\Projects\BloodSystem\Extern\EpiLib\Tools\EpiCodeGenerator/test/samples/v1\B.epi
[DEBUG] (line:   1, column:   1): "enum" (TokenType.EnumType)
[DEBUG] (line:   1, column:   6): "DEnum" (TokenType.Identifier)
[DEBUG] (line:   2, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:   3, column:   6): "D_AAA" (TokenType.Identifier)
[DEBUG] (line:   4, column:   6): "D_BBB" (TokenType.Identifier)
[DEBUG] (line:   5, column:   6): "D_CCC" (TokenType.Identifier)
[DEBUG] (line:   6, column:   6): "D_DDD" (TokenType.Identifier)
[DEBUG] (line:   7, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:   7, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:   9, column:   2): "class" (TokenType.ClassType)
[DEBUG] (line:   9, column:   8): "DClass" (TokenType.Identifier)
[DEBUG] (line:   9, column:  15): ":" (TokenType.Colon)
[DEBUG] (line:   9, column:  17): "BClass" (TokenType.Identifier)
[DEBUG] (line:  10, column:   2): "{" (TokenType.OpenBrace)
[DEBUG] (line:  11, column:   6): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  11, column:   7): "ReadCallback" (TokenType.ReadCallbackAttr)
[DEBUG] (line:  11, column:  19): "," (TokenType.Comma)
[DEBUG] (line:  11, column:  21): "WriteCallback" (TokenType.WriteCallbackAttr)
[DEBUG] (line:  11, column:  34): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  11, column:  36): "epiU32" (TokenType.UIntType)
[DEBUG] (line:  11, column:  43): "HIHI" (TokenType.Identifier)
[DEBUG] (line:  11, column:  47): ";" (TokenType.Semicolon)
[DEBUG] (line:  13, column:   6): "[" (TokenType.OpenSqBracket)
[DEBUG] (line:  13, column:   7): "NoDuplicate" (TokenType.NoDuplicateAttr)
[DEBUG] (line:  13, column:  18): "," (TokenType.Comma)
[DEBUG] (line:  13, column:  20): "Transient" (TokenType.TransientAttr)
[DEBUG] (line:  13, column:  29): "]" (TokenType.CloseSqBracket)
[DEBUG] (line:  14, column:   6): "{" (TokenType.OpenBrace)
[DEBUG] (line:  15, column:  10): "epiBool" (TokenType.BoolType)
[DEBUG] (line:  15, column:  18): "IsA" (TokenType.Identifier)
[DEBUG] (line:  15, column:  21): ";" (TokenType.Semicolon)
[DEBUG] (line:  16, column:  10): "epiBool" (TokenType.BoolType)
[DEBUG] (line:  16, column:  18): "IsB" (TokenType.Identifier)
[DEBUG] (line:  16, column:  21): ";" (TokenType.Semicolon)
[DEBUG] (line:  17, column:   6): "}" (TokenType.CloseBrace)
[DEBUG] (line:  19, column:   6): "DEnum" (TokenType.Identifier)
[DEBUG] (line:  19, column:  12): "SomeDEnum" (TokenType.Identifier)
[DEBUG] (line:  19, column:  22): "=" (TokenType.Assing)
[DEBUG] (line:  19, column:  24): "DEnum" (TokenType.Identifier)
[DEBUG] (line:  19, column:  29): "::" (TokenType.DoubleColon)
[DEBUG] (line:  19, column:  31): "D_BBB" (TokenType.Identifier)
[DEBUG] (line:  19, column:  36): ";" (TokenType.Semicolon)
[DEBUG] (line:  20, column:   2): "}" (TokenType.CloseBrace)
[DEBUG] (line:  20, column:   3): ";" (TokenType.Semicolon)
[DEBUG] (line:  20, column:   4): "EOF" (TokenType.EOF)
[ERROR] Syntax error (line:  19, column:  22): "=" (TokenType.Assing) message: "Incorrect value literal" (Custom types are unassingable)
