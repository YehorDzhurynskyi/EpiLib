cmake_minimum_required(VERSION 2.8.2)

project(FFmpeg-extern NONE)

include(ExternalProject)

# TODO: disable unnecessary libraries considering `COMPONENTS` parameter of `epi_extern_add` function
# TODO: configure `FFMPEG_ARGS` considering `TOOLCAHIN`, `ARCH`, `OS` etc
# TODO: compile in `Release` mode

set(FFMPEG_ARGS
    --arch=x86_64
    --target-os=win64
    --toolchain=msvc

    --enable-asm
    --enable-x86asm
    @FFMPEG_ENABLE_ZLIB@

    --disable-programs
    --disable-doc

    --extra-cflags="/MDd @FFMPEG_EXTRA_CFLAGS@"
    --extra-cxxflags="/MDd @FFMPEG_EXTRA_CXXFLAGS@"
    --extra-ldflags="@FFMPEG_EXTRA_LDFLAGS@"
)

string(JOIN " " FFMPEG_ARGS ${FFMPEG_ARGS})

message(STATUS "FFMPEG_ARGS=${FFMPEG_ARGS}")

set(FFMPEG_SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/src")
set(FFMPEG_BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/build" CACHE PATH "" FORCE)

if (WIN32)
    execute_process(COMMAND bash -c "wslpath -a ${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/src"
        RESULT_VARIABLE COMMAND_STATUS
        OUTPUT_VARIABLE FFMPEG_SOURCE_DIR
        OUTPUT_STRIP_TRAILING_WHITESPACE
    )

    if (COMMAND_STATUS)
        message(FATAL_ERROR "FFMpeg `wslpath` command has failed: ${COMMAND_STATUS}")
    endif ()

    execute_process(COMMAND bash -c "wslpath -a ${FFMPEG_BUILD_DIR}"
        RESULT_VARIABLE COMMAND_STATUS
        OUTPUT_VARIABLE FFMPEG_BUILD_DIR
        OUTPUT_STRIP_TRAILING_WHITESPACE
    )

    if (COMMAND_STATUS)
        message(FATAL_ERROR "FFMpeg `wslpath` command has failed: ${COMMAND_STATUS}")
    endif ()
endif (WIN32)

# TODO: remove
# export PKG_CONFIG_PATH=/mnt/c/Users/yadzh/Projects/EpiLab/_projects/Visual_Studio_16_2019_x64_v141/EpiLab/Extern/EpiLib/EpiLib/EpiMultimedia/zlib/zlib/build:$PKG_CONFIG_PATH && ./configure --arch=x86_64 --target-os=win64 --toolchain=msvc --enable-asm --enable-x86asm --enable-zlib --disable-programs --disable-doc --extra-cflags='/MDd /I /mnt/c/Users/yadzh/Projects/EpiLab/_projects/Visual_Studio_16_2019_x64_v141/EpiLab/Extern/EpiLib/EpiLib/EpiMultimedia/zlib/zlib/install/include' --extra-cxxflags='/MDd /I /mnt/c/Users/yadzh/Projects/EpiLab/_projects/Visual_Studio_16_2019_x64_v141/EpiLab/Extern/EpiLib/EpiLib/EpiMultimedia/zlib/zlib/install/include' --extra-ldflags='/LIBPATH:/mnt/c/Users/yadzh/Projects/EpiLab/_projects/Visual_Studio_16_2019_x64_v141/EpiLab/Extern/EpiLib/EpiLib/EpiMultimedia/zlib/zlib/install/lib/' --prefix=/mnt/c/Users/yadzh/Projects/EpiLab/_projects/Visual_Studio_16_2019_x64_v141/EpiLab/Extern/EpiLib/EpiLib/EpiMultimedia/FFmpeg/FFmpeg/build

ExternalProject_Add(FFmpeg
    SOURCE_DIR          "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/src"
    BINARY_DIR          "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/build"
    TMP_DIR             "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/tmp"
    STAMP_DIR           "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/stamp"
    DOWNLOAD_DIR        "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/download"
    INSTALL_DIR         "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/install"
    LOG_DIR             "${CMAKE_CURRENT_BINARY_DIR}/FFmpeg/log"

    DOWNLOAD_COMMAND    C:/Windows/sysnative/bash.exe -c "git clone --progress --depth 1 --branch n4.3.1 https://github.com/FFmpeg/FFmpeg.git '${FFMPEG_SOURCE_DIR}'"
    CONFIGURE_COMMAND   C:/Windows/sysnative/bash.exe -c "cd '${FFMPEG_SOURCE_DIR}' && export PKG_CONFIG_PATH=@FFMPEG_EXTRA_PKG_CONFIG_PATH@:\$PKG_CONFIG_PATH && ./configure ${FFMPEG_ARGS} --prefix='${FFMPEG_BUILD_DIR}'"
    BUILD_COMMAND       C:/Windows/sysnative/bash.exe -c "cd '${FFMPEG_SOURCE_DIR}' && make -j12 && find . -name *.d -type f -delete"
    INSTALL_COMMAND     C:/Windows/sysnative/bash.exe -c "cd '${FFMPEG_SOURCE_DIR}' && make install"
)
